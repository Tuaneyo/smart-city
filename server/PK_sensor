from operator import le
from threading import Thread
import json
from rpi_lcd import LCD
import RPi.GPIO as GPIO
import time
GPIO.setmode(GPIO.BCM)

TRIG = 23
ECHO = 24
LED_RED = 17
LED_GREEN = 22
LED_RED1 = 26
LED_GREEN1 = 19

# def PK_1():
#     global TRIG
#     TRIG = 21
#     ECHO = 20
#     LED_RED = 26
#     LED_GREEN = 19

# def PK_2():
#     TRIG = 23   
#     ECHO = 24
#     LED_RED = 17
#     # LED_YELLOW = 27
#     LED_GREEN = 22

lcd = LCD()
GPIO.setwarnings(False)
GPIO.setup(TRIG, GPIO.OUT)
GPIO.setup(ECHO, GPIO.IN)
GPIO.setup(LED_GREEN,GPIO.OUT)
GPIO.setup(LED_RED,GPIO.OUT)
GPIO.setup(LED_GREEN1,GPIO.OUT)
GPIO.setup(LED_RED1,GPIO.OUT)

try:
    lcd.clear()
    lcd.text("Waiting for ",1)
    lcd.text("sensor to Settle",2)
    while True:
        GPIO.output(TRIG, False)
        
        time.sleep(2)

        GPIO.output(TRIG, True)
        time.sleep(0.00001)
        GPIO.output(TRIG, False)

        while GPIO.input(ECHO) == 0:
            pulse_start = time.time()

        while GPIO.input(ECHO) == 1:
            pulse_end = time.time()
        
        pulse_duration = pulse_end - pulse_start

        distance = pulse_duration * 17150
        distance = round(distance, 1)
        
        if distance >= 20:
            GPIO.output(LED_GREEN, GPIO.HIGH)
            GPIO.output(LED_GREEN1, GPIO.HIGH)
            # GPIO.output(LED_RED1, GPIO.HIGH)
            
            GPIO.output(LED_RED, GPIO.LOW) 
            GPIO.output(LED_RED1, GPIO.LOW) 
            lcd.clear() 
            lcd.text("Beschikbaar:" ,1) 
            text = "Plaats"
            if GPIO.input(LED_GREEN) == True:
                text += " 1"
            if GPIO.input(LED_GREEN1) == True:
                text += " ,2"
            if GPIO.input(LED_RED) == True:
                text = text.replace("1", "")
                text = text.replace(",2", "2") 
            if GPIO.input(LED_RED1) == True:
                text = text.replace(",2", "") 
            # else:
            
            lcd.text(text ,2) 

            
        else:
            GPIO.output(LED_GREEN, GPIO.LOW)
            GPIO.output(LED_RED, GPIO.HIGH) 
            if len(text) <= 7:
                lcd.clear()
                lcd.text("Garage is vol",1)
            elif GPIO.input(LED_RED) == True:
                text = text.replace("1", "")
                text = text.replace(",2", "2") 
                lcd.text(text ,2) 
            elif GPIO.input(LED_RED1) == True:
                text = text.replace(",2", "") 
                lcd.text(text ,2) 
 
        # lcd.clear()
        # lcd.text("Distance:" + str(distance) + "cm",1)
except KeyboardInterrupt:
    print("Cleaning up!")
    GPIO.cleanup
    GPIO.output(LED_GREEN,GPIO.LOW)
    GPIO.output(LED_RED, GPIO.LOW)  
    GPIO.output(LED_GREEN1,GPIO.LOW)
    GPIO.output(LED_RED1, GPIO.LOW)  
    lcd.clear()                                                                                                                                                                                                                                            
                             
